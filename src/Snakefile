import subprocess
#from snakemake.utils import R

def execcommand(cmd,stdout,stderr,input=""):
    with open(stdout, "w") as outf:
        with open (stderr, "w") as errf:
            o,e = subprocess.Popen(cmd, shell=True, stdout=outf, stderr=errf, universal_newlines=True).communicate(input)
            errf.close()
        outf.close()
    return o,e

obs = [str(i) for i in range(1,41,5)]
enmember = [str(i) for i in range(8,81,10)]
enmember += [str(i) for i in range(100, 1001, 100)]

rule all:
    input:
        expand('3dvarnmc_data/{param}', param=obs),
        expand('kf6norm_obs_data/{param}', param=obs),
        expand('po_obs_data/{param}', param=obs),
        expand('po_obs_data/{enmember}', param=enmember)

# rulename should not be begin by numbers
rule var3dnmc:
    params:
        2
    output:
        '3dvarnmc_data/{a}'
    log:
        '3dvarnmc_log/{a}'
    run:
        execcommand(expand('./3DVarNMC_inout.py {n}', n={wildcards.a}), output[0], log[0])

rule kf6norm_obs:
    params:
        2
    output:
        'kf6norm_obs_data/{a}'
    log:
        'kf6norm_obs_log/{a}'
    run:
        execcommand(expand('./KF6norm_obs_inout.py {n}', n={wildcards.a}), output[0], log[0])

rule po_obs:
    params:
        3
    output:
        'po_obs_data/{a}'
    log:
        'po_obs_log/{a}'
    run:
        execcommand(expand('./PO_obs_inout.py {n}', n={wildcards.a}), output[0], log[0])

rule po_enmember:
    params:
        3
    output:
        'po_member_data/{a}'
    log:
        'po_member_log/{a}'
    run:
        execcommand(expand('./PO_member_inout.py {n}', n={wildcards.a}), output[0], log[0])

rule rm:
    shell:
        "rm -f 3dvarnmc_data/* kf6_norm_data/* po_obs_data/*, po_member_data/*"
